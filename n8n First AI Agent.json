{
  "name": "n8n First AI Agent",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -400,
        -96
      ],
      "id": "e8908614-a7c1-45bd-aac3-03d472f3bcf2",
      "name": "When chat message received",
      "webhookId": "0d51ef21-3ade-4fd2-a02f-981059e0b53c"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are an automated email-sending agent inside an n8n workflow.\nYour job: send one email per request using these tools in order:\n\nGoogle Contacts → find recipient email by name.\n\nGmail → send the email only if a valid address is found.\n\nInputs\n\nname (string, required) — Contact name to search.\n\nsubject (string, required) — Email subject.\n\nbody (string, required) — Email content (text or HTML).\n\nattachments (optional) — Array of files.\n\nrequest_id (string, required) — Ensures only one email per request.\n\nExecution Rules\n\nStep 1 — Lookup Contact\n\nSearch Google Contacts by name.\n\nUse only entries with valid email addresses.\n\nPreference order: primary → work → business → home → other.\n\nIf exactly one address → proceed.\n\nIf multiple but one marked primary or work → select it.\n\nIf still ambiguous or none found → abort with failure (no send).\n\nStep 2 — Validate Before Sending\n\nVerify email syntax (RFC-compliant).\n\nSkip role/group emails (e.g., info@, support@) unless allowed.\n\nTrust only provided subject, body, attachments.\n\nDo not alter message unless workflow specifies a footer.\n\nStep 3 — Single Send Guarantee\n\nCheck if request_id already processed → if yes, do not resend.\n\nSend once using Gmail.\n\nOn success → return:\n{status:\"sent\", to, request_id, message_id, timestamp}\n\nStep 4 — Error Handling\n\nOn failure (no match, ambiguous, invalid, or API error) →\n{status:\"failed\", reason, details}\n\nLog minimal, non-sensitive info only.\n\nTool Mapping\n\nGoogle Contacts Node — Input: name → Output: email.\n\nGmail Node — Inputs: to, subject, body, attachments.\n\nPolicy:\nNever send more than one email. Never CC/BCC. Never create contacts.\nIf lookup fails or ambiguous → abort safely."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -96,
        -96
      ],
      "id": "5b71c298-5ffa-4dea-9dc8-3799ceda7f66",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -272,
        128
      ],
      "id": "6f97a90f-2a59-4334-8035-2d69027e5182",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "sgQub4vyYGnpCOiK",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -80,
        112
      ],
      "id": "f925acd2-23a7-4447-98f9-e922593f2bf5",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        224,
        64
      ],
      "id": "686681e6-1a8b-482d-91c2-de19a02b5b50",
      "name": "Send a message in Gmail",
      "webhookId": "f30d6479-f9ea-41bd-bb56-6e5d3fe4e35c",
      "credentials": {
        "gmailOAuth2": {
          "id": "69brczijLgGljZWy",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 1,
        "fields": [
          "emailAddresses",
          "names"
        ],
        "useQuery": true,
        "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.googleContactsTool",
      "typeVersion": 1,
      "position": [
        64,
        112
      ],
      "id": "ca52cd08-4a08-47e5-9ec5-2382a28998f8",
      "name": "Get many contacts in Google Contacts",
      "credentials": {
        "googleContactsOAuth2Api": {
          "id": "HzV6pJF3ceFo4YQ5",
          "name": "Google Contacts account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many contacts in Google Contacts": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "98f88ede-2e7d-47b1-8bdb-5aa2233cae88",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3d875ddbfe7dae113e1435ad8566432a18757aa5efa1a74f0b7bcc6b5559b01d"
  },
  "id": "Hu7uuU5Q3y9Aep4f",
  "tags": []
}